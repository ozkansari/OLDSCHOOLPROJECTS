/*
 * LoginJFrame.java
 *
 * Created on 07 Ocak 2007 Pazar, 00:39
 *
 *
 * YOU NEED JAVA 6 TO RUN THIS PROGRAM!!!
 *
 */

package client;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;

import javax.swing.*;

/**
 * <p>
 * LoginJFrame provides the login frame screen
 * </p>
 * 
 * @author  ozkansari
 */
public class LoginJFrame extends javax.swing.JFrame {
    
    /** Creates new LoginJFrame form */
    public LoginJFrame(  ) {
        
        super("MyMessenger");
        
        initComponents();
        
        MenuHandler handler = new MenuHandler(); // create an instance of inner class

        login_JButton.addActionListener(handler);
        
        setResizable( false );
        setLocationByPlatform( true);
        setVisible(true);
        toFront();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        uname_JLabel = new javax.swing.JLabel();
        uname_JTextField = new javax.swing.JTextField();
        login_JButton = new javax.swing.JButton();
        server_JLabel = new javax.swing.JLabel();
        server_JTextField = new javax.swing.JTextField();
        port_JLabel = new javax.swing.JLabel();
        port_JTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        programInfoTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        uname_JLabel.setText("USER NAME ");

        uname_JTextField.setText("ozkansari");

        login_JButton.setText("LOG IN");

        server_JLabel.setText("SERVER @");

        server_JTextField.setText("127.0.0.1");

        port_JLabel.setText("PORT NO");

        port_JTextField.setText("5000");

        programInfoTextPane.setBackground(new java.awt.Color(204, 204, 255));
        programInfoTextPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        programInfoTextPane.setEditable(false);
        programInfoTextPane.setFont(new java.awt.Font("Viner Hand ITC", 2, 28));
        programInfoTextPane.setText("MyMessenger");
        programInfoTextPane.setAutoscrolls(false);
        programInfoTextPane.setFocusCycleRoot(false);
        programInfoTextPane.setFocusable(false);
        programInfoTextPane.setMargin(new java.awt.Insets(5, 5, 5, 5));
        programInfoTextPane.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(programInfoTextPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(login_JButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uname_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(server_JLabel)
                            .addComponent(port_JLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(port_JTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(server_JTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(uname_JTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uname_JLabel)
                    .addComponent(uname_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(server_JLabel)
                    .addComponent(server_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(port_JLabel)
                    .addComponent(port_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(login_JButton)
                .addGap(41, 41, 41))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    /**
     * Validate entries
     *
     * @return if inputs are correct
     */
    private boolean validateInput( ) {
        /* Check for empty fields */
        if( uname_JTextField.getText().isEmpty() ) {
            
            JOptionPane.showMessageDialog( LoginJFrame.this,
                    "User name cannot be empty",
                    "Error", JOptionPane.WARNING_MESSAGE );
            return false;
        }
        
        
        return true;
        
    } // --end-validateInput-method--

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        // Run login Frame
        LoginJFrame newApp = new LoginJFrame();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton login_JButton;
    private javax.swing.JLabel port_JLabel;
    private javax.swing.JTextField port_JTextField;
    private javax.swing.JTextPane programInfoTextPane;
    private javax.swing.JLabel server_JLabel;
    private javax.swing.JTextField server_JTextField;
    private javax.swing.JLabel uname_JLabel;
    private javax.swing.JTextField uname_JTextField;
    // End of variables declaration//GEN-END:variables

    /** INNER CLASS FOR MENU EVENT HANDLING
     *
     */
    class MenuHandler implements ActionListener {
        
        /* (non-Javadoc)
         * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
         */
        public void actionPerformed(ActionEvent event) {
            
            String serverAddress;
            int portNumber;
            String userName;
            
            // detect the source of the event generated and perform their respective task
            
            // if 'LIST PRODUCTS' is selected
            if (event.getSource() == login_JButton ) {
                
                if( validateInput() == false ) {
                    return;
                }
                
                serverAddress = server_JTextField.getText();
                portNumber = Integer.parseInt( port_JTextField.getText() );
                userName = uname_JTextField.getText();
                
                MessengerJFrame messenger = null;
                MessengerClient clientRef = null;
                
                clientRef = new MessengerClient(serverAddress, portNumber, userName );
                if( clientRef.getConnectionSocket() == null ){
                    displayDialogToUser( "Cannot connect to Server. \n Please try again later.", "Connection Error", javax.swing.JOptionPane.ERROR_MESSAGE );
                    return;
                }
                
                messenger = new MessengerJFrame( uname_JTextField.getText(), clientRef );
                
                clientRef.setMainFrameRef( messenger );
                clientRef.setLoginScreen( LoginJFrame.this );
                
                // close
                setVisible(false);
                
            }
                 
        } //--end- actionPerformed() -function--
        
    } // --end-inner-class- "MenuHandler" --
    
    
    /*  ***********************************************************************************************/
    /*	-- DISPLAYING METHODS ------------------------------------------------------------------------*/
    /*  ***********************************************************************************************/

    /**
     * @param dialogMessage
     * @param dialogHeader
     * @param messageType
     */
    public void displayDialogToUser( String dialogMessage, String dialogHeader, int messageType ){
        JOptionPane.showMessageDialog( 
                getContentPane(), dialogMessage,
                dialogHeader, messageType 
        ); 
    }
    
}
